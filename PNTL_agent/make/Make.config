

include ${ROOT_DIR}/make/Make.tools

BUILD_DIR =${ROOT_DIR}/build

ifdef LOCALDIR
BLDDIR = ${BUILD_DIR}/${LOCALDIR}
else # ifdef LOCALDIR
BLDDIR = ${BUILD_DIR}
endif # ifdef LOCALDIR

LIBDIR = ${BUILD_DIR}

#Q=@

#
# In each directory, build a list of local sources, objects, and headers
#
LSRCS	=	$(wildcard *.c *.cpp *.s *.cc *.C)
LOBJS	=	$(addsuffix .o, $(basename ${LSRCS}))
BOBJS	= 	$(addprefix ${BLDDIR}/,${LOBJS})
LHDRS	=	$(wildcard *.h *.H)
LDOTIS	=	$(wildcard *.i)


.PHONY: all install clean distclean

.PRECIOUS: ${BLDDIR}/.tree

%/.tree:
	@$(ECHO) Creating build directory $(dir $@)
	$Q($(MKDIR) $(dir $@); $(TOUCH) $@)

# Rule allowing build through CPP only, creates .E file from .c file.

%.E: %.c
	$Q$(CC) -E ${CFLAGS} $< | $(SED) -e '/^ *$$/d' -e p -e d > $@

# Rule allowing build through source only, creates .s file from .c file.

%.s: %.c
	$Q$(CC) -S ${CFLAGS} $<


${BLDDIR}/%.o: %.c
	@$(ECHO) Compiling ${LOCALDIR}/$< 
	$Q$(MKDIR) $(BLDDIR)/
	$Q$(RM) -f $@
	$(CC) $(CFLAGS) $(EXTRA_CFLAGS) -o $@ -c $(realpath $<)

${BLDDIR}/%.o: %.cpp
	@$(ECHO) Compiling ${LOCALDIR}/$< 
	$Q$(MKDIR) $(BLDDIR)/
	$Q$(RM) -f $@
	$(CXX) $(CXXFLAGS) $(EXTRA_CXXFLAGS) -o $@ -c $(realpath $<)

${BLDDIR}/%.o: %.s
ifdef QUIET
	$(Q)$(ECHO) Assembling ${LOCALDIR}/$<
endif
	$Q$(CC) ${CFLAGS} ${EXTRA_CFLAGS} -o $@ -c $(realpath $<)

